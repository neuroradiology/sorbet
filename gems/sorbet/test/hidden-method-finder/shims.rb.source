# the following are included to avoid including these in
# hidden-definitions, as they differ between OS X and Linux

class BasicSocket < IO
end

class Socket < BasicSocket
  AF_CCITT = nil
  AF_CHAOS = nil
  AF_CNT = nil
  AF_COIP = nil
  AF_DATAKIT = nil
  AF_DLI = nil
  AF_E164 = nil
  AF_ECMA = nil
  AF_HYLINK = nil
  AF_IMPLINK = nil
  AF_ISO = nil
  AF_LAT = nil
  AF_LINK = nil
  AF_NATM = nil
  AF_NDRV = nil
  AF_NETBIOS = nil
  AF_NS = nil
  AF_OSI = nil
  AF_PPP = nil
  AF_PUP = nil
  AF_SIP = nil
  AF_SYSTEM = nil
  AI_DEFAULT = nil
  AI_MASK = nil
  AI_V4MAPPED_CFG = nil
  EAI_BADHINTS = nil
  EAI_MAX = nil
  EAI_PROTOCOL = nil
  IFF_ALTPHYS = nil
  IFF_LINK0 = nil
  IFF_LINK1 = nil
  IFF_LINK2 = nil
  IFF_OACTIVE = nil
  IFF_SIMPLEX = nil
  IPPROTO_EON = nil
  IPPROTO_GGP = nil
  IPPROTO_HELLO = nil
  IPPROTO_MAX = nil
  IPPROTO_ND = nil
  IPPROTO_XTP = nil
  IP_DONTFRAG = nil
  IP_PORTRANGE = nil
  IP_RECVDSTADDR = nil
  IP_RECVIF = nil
  LOCAL_PEERCRED = nil
  MSG_EOF = nil
  MSG_FLUSH = nil
  MSG_HAVEMORE = nil
  MSG_HOLD = nil
  MSG_RCVMORE = nil
  MSG_SEND = nil
  PF_CCITT = nil
  PF_CHAOS = nil
  PF_CNT = nil
  PF_COIP = nil
  PF_DATAKIT = nil
  PF_DLI = nil
  PF_ECMA = nil
  PF_HYLINK = nil
  PF_IMPLINK = nil
  PF_ISO = nil
  PF_LAT = nil
  PF_LINK = nil
  PF_NATM = nil
  PF_NDRV = nil
  PF_NETBIOS = nil
  PF_NS = nil
  PF_OSI = nil
  PF_PIP = nil
  PF_PPP = nil
  PF_PUP = nil
  PF_RTIP = nil
  PF_SIP = nil
  PF_SYSTEM = nil
  PF_XTP = nil
  SCM_CREDS = nil
  SO_DONTTRUNC = nil
  SO_NKE = nil
  SO_NOSIGPIPE = nil
  SO_NREAD = nil
  SO_USELOOPBACK = nil
  SO_WANTMORE = nil
  SO_WANTOOBFLAG = nil
  TCP_NOOPT = nil
  TCP_NOPUSH = nil
  SO_BPF_EXTENSIONS = nil
end

class BasicSocket < IO
  def read_nonblock(*_); end
end

Errno::EAUTH = Errno::NOERROR
Errno::EBADEXEC = Errno::NOERROR
Errno::EBADARCH = Errno::NOERROR
Errno::EBADMACHO = Errno::NOERROR
Errno::EBADRPC = Errno::NOERROR
Errno::EDEADLOCK = Errno::NOERROR
Errno::EDEVERR = Errno::NOERROR
Errno::EFTYPE = Errno::NOERROR
Errno::ELAST = Errno::NOERROR
Errno::ENEEDAUTH = Errno::NOERROR
Errno::ENOATTR = Errno::NOERROR
Errno::ENOPOLICY = Errno::NOERROR
Errno::ENOTSUP = Errno::NOERROR
Errno::EPROCLIM = Errno::NOERROR
Errno::EPROCUNAVAIL = Errno::NOERROR
Errno::EPROGMISMATCH = Errno::NOERROR
Errno::EPROGUNAVAIL = Errno::NOERROR
Errno::EPWROFF = Errno::NOERROR
Errno::EQFULL = Errno::NOERROR
Errno::ERPCMISMATCH = Errno::NOERROR
Errno::EPWROFF = Errno::NOERROR
Errno::EPROGUNAVAIL = Errno::NOERROR
Errno::EQFULL = Errno::ELAST
Errno::ESHLIBVERS = Errno::NOERROR

class IPSocket < BasicSocket
  def self.getaddress_orig(*_); end
end

module Process
  CLOCK_MONOTONIC_RAW_APPROX = nil
  CLOCK_UPTIME_RAW = nil
  CLOCK_UPTIME_RAW_APPROX = nil
end

module Socket::Constants
  AF_CCITT = nil
  AF_CHAOS = nil
  AF_CNT = nil
  AF_COIP = nil
  AF_DATAKIT = nil
  AF_DLI = nil
  AF_E164 = nil
  AF_ECMA = nil
  AF_HYLINK = nil
  AF_IMPLINK = nil
  AF_ISO = nil
  AF_LAT = nil
  AF_LINK = nil
  AF_NATM = nil
  AF_NDRV = nil
  AF_NETBIOS = nil
  AF_NS = nil
  AF_OSI = nil
  AF_PPP = nil
  AF_PUP = nil
  AF_SIP = nil
  AF_SYSTEM = nil
  AI_DEFAULT = nil
  AI_MASK = nil
  AI_V4MAPPED_CFG = nil
  EAI_BADHINTS = nil
  EAI_MAX = nil
  EAI_PROTOCOL = nil
  IFF_ALTPHYS = nil
  IFF_LINK0 = nil
  IFF_LINK1 = nil
  IFF_LINK2 = nil
  IFF_OACTIVE = nil
  IFF_SIMPLEX = nil
  IPPROTO_EON = nil
  IPPROTO_GGP = nil
  IPPROTO_HELLO = nil
  IPPROTO_MAX = nil
  IPPROTO_ND = nil
  IPPROTO_XTP = nil
  IP_DONTFRAG = nil
  IP_PORTRANGE = nil
  IP_RECVDSTADDR = nil
  IP_RECVIF = nil
  LOCAL_PEERCRED = nil
  MSG_EOF = nil
  MSG_FLUSH = nil
  MSG_HAVEMORE = nil
  MSG_HOLD = nil
  MSG_RCVMORE = nil
  MSG_SEND = nil
  PF_CCITT = nil
  PF_CHAOS = nil
  PF_CNT = nil
  PF_COIP = nil
  PF_DATAKIT = nil
  PF_DLI = nil
  PF_ECMA = nil
  PF_HYLINK = nil
  PF_IMPLINK = nil
  PF_ISO = nil
  PF_LAT = nil
  PF_LINK = nil
  PF_NATM = nil
  PF_NDRV = nil
  PF_NETBIOS = nil
  PF_NS = nil
  PF_OSI = nil
  PF_PIP = nil
  PF_PPP = nil
  PF_PUP = nil
  PF_RTIP = nil
  PF_SIP = nil
  PF_SYSTEM = nil
  PF_XTP = nil
  SCM_CREDS = nil
  SO_DONTTRUNC = nil
  SO_NKE = nil
  SO_NOSIGPIPE = nil
  SO_NREAD = nil
  SO_USELOOPBACK = nil
  SO_WANTMORE = nil
  SO_WANTOOBFLAG = nil
  TCP_NOOPT = nil
  TCP_NOPUSH = nil
    AF_CCITT = nil
   AF_CHAOS = nil
   AF_CNT = nil
   AF_COIP = nil
   AF_DATAKIT = nil
   AF_DLI = nil
   AF_E164 = nil
   AF_ECMA = nil
   AF_HYLINK = nil
   AF_IMPLINK = nil
   AF_ISO = nil
   AF_LAT = nil
   AF_LINK = nil
   AF_NATM = nil
   AF_NDRV = nil
   AF_NETBIOS = nil
   AF_NS = nil
   AF_OSI = nil
   AF_PPP = nil
   AF_PUP = nil
   AF_SIP = nil
   AF_SYSTEM = nil
   AI_DEFAULT = nil
   AI_MASK = nil
   AI_V4MAPPED_CFG = nil
   EAI_BADHINTS = nil
   EAI_MAX = nil
   EAI_PROTOCOL = nil
   IFF_ALTPHYS = nil
   IFF_LINK0 = nil
   IFF_LINK1 = nil
   IFF_LINK2 = nil
   IFF_OACTIVE = nil
   IFF_SIMPLEX = nil
   IPPROTO_EON = nil
   IPPROTO_GGP = nil
   IPPROTO_HELLO = nil
   IPPROTO_MAX = nil
   IPPROTO_ND = nil
   IPPROTO_XTP = nil
   IP_PORTRANGE = nil
   IP_RECVDSTADDR = nil
   IP_RECVIF = nil
   LOCAL_PEERCRED = nil
   MSG_EOF = nil
   MSG_FLUSH = nil
   MSG_HAVEMORE = nil
   MSG_HOLD = nil
   MSG_RCVMORE = nil
   MSG_SEND = nil
   PF_CCITT = nil
   PF_CHAOS = nil
   PF_CNT = nil
   PF_COIP = nil
   PF_DATAKIT = nil
   PF_DLI = nil
   PF_ECMA = nil
   PF_HYLINK = nil
   PF_IMPLINK = nil
   PF_ISO = nil
   PF_LAT = nil
   PF_LINK = nil
   PF_NATM = nil
   PF_NDRV = nil
   PF_NETBIOS = nil
   PF_NS = nil
   PF_OSI = nil
   PF_PIP = nil
   PF_PPP = nil
   PF_PUP = nil
   PF_RTIP = nil
   PF_SIP = nil
   PF_SYSTEM = nil
   PF_XTP = nil
   SCM_CREDS = nil
   SO_DONTTRUNC = nil
   SO_NKE = nil
   SO_NOSIGPIPE = nil
   SO_NREAD = nil
   SO_USELOOPBACK = nil
   SO_WANTMORE = nil
   SO_WANTOOBFLAG = nil
   TCP_NOOPT = nil
   TCP_NOPUSH = nil
   SO_BPF_EXTENSIONS = nil
   AF_CCITT = nil
   AF_CHAOS = nil
   AF_CNT = nil
   AF_COIP = nil
   AF_DATAKIT = nil
   AF_DLI = nil
   AF_E164 = nil
   AF_ECMA = nil
   AF_HYLINK = nil
   AF_IMPLINK = nil
   AF_ISO = nil
   AF_LAT = nil
   AF_LINK = nil
   AF_NATM = nil
   AF_NDRV = nil
   AF_NETBIOS = nil
   AF_NS = nil
   AF_OSI = nil
   AF_PPP = nil
   AF_PUP = nil
   AF_SIP = nil
   AF_SYSTEM = nil
   AI_DEFAULT = nil
   AI_MASK = nil
   AI_V4MAPPED_CFG = nil
   EAI_BADHINTS = nil
   EAI_MAX = nil
   EAI_PROTOCOL = nil
   IFF_ALTPHYS = nil
   IFF_LINK0 = nil
   IFF_LINK1 = nil
   IFF_LINK2 = nil
   IFF_OACTIVE = nil
   IFF_SIMPLEX = nil
   IPPROTO_EON = nil
   IPPROTO_GGP = nil
   IPPROTO_HELLO = nil
   IPPROTO_MAX = nil
   IPPROTO_ND = nil
   IPPROTO_XTP = nil
   IP_PORTRANGE = nil
   IP_RECVDSTADDR = nil
   IP_RECVIF = nil
   LOCAL_PEERCRED = nil
   MSG_EOF = nil
   MSG_FLUSH = nil
   MSG_HAVEMORE = nil
   MSG_HOLD = nil
   MSG_RCVMORE = nil
   MSG_SEND = nil
   PF_CCITT = nil
   PF_CHAOS = nil
   PF_CNT = nil
   PF_COIP = nil
   PF_DATAKIT = nil
   PF_DLI = nil
   PF_ECMA = nil
   PF_HYLINK = nil
   PF_IMPLINK = nil
   PF_ISO = nil
   PF_LAT = nil
   PF_LINK = nil
   PF_NATM = nil
   PF_NDRV = nil
   PF_NETBIOS = nil
   PF_NS = nil
   PF_OSI = nil
   PF_PIP = nil
   PF_PPP = nil
   PF_PUP = nil
   PF_RTIP = nil
   PF_SIP = nil
   PF_SYSTEM = nil
   PF_XTP = nil
   SCM_CREDS = nil
   SO_DONTTRUNC = nil
   SO_NKE = nil
   SO_NOSIGPIPE = nil
   SO_NREAD = nil
   SO_USELOOPBACK = nil
   SO_WANTMORE = nil
   SO_WANTOOBFLAG = nil
   TCP_NOOPT = nil
   TCP_NOPUSH = nil
   SO_BPF_EXTENSIONS = nil
end

class Socket
   IPV6_USE_MIN_MTU = nil
end

module Socket::Constants
   IPV6_USE_MIN_MTU = nil
end

class Etc::Passwd
  def change(); end
  def change=(); end
  def expire(); end
  def expire=(); end
  def uclass(); end
  def uclass=(); end
end

class IO
  def nonblock(*_); end
  def nonblock=(nonblock); end
  def nonblock?(); end
end

class Integer
  def to_bn(); end
  GMP_VERSION = nil
end

Gem::Resolver::DependencyConflict = Gem::Resolver::Conflict

module Gem::Security
  def self.alt_name_or_x509_entry(certificate, x509_entry); end
  def self.create_cert(subject, key, age=T.unsafe(nil), extensions=T.unsafe(nil), serial=T.unsafe(nil)); end
  def self.create_cert_email(email, key, age=T.unsafe(nil), extensions=T.unsafe(nil)); end
  def self.create_cert_self_signed(subject, key, age=T.unsafe(nil), extensions=T.unsafe(nil), serial=T.unsafe(nil)); end
  def self.create_key(length=T.unsafe(nil), algorithm=T.unsafe(nil)); end
  def self.email_to_name(email_address); end
  def self.re_sign(expired_certificate, private_key, age=T.unsafe(nil), extensions=T.unsafe(nil)); end
  def self.reset(); end
  def self.sign(certificate, signing_key, signing_cert, age=T.unsafe(nil), extensions=T.unsafe(nil), serial=T.unsafe(nil)); end
  def self.trust_dir(); end
  def self.trusted_certificates(&block); end
  def self.write(pemmable, path, permissions=T.unsafe(nil), passphrase=T.unsafe(nil), cipher=T.unsafe(nil)); end
  AlmostNoSecurity = ::T.let(nil, ::T.untyped)
  DIGEST_NAME = ::T.let(nil, ::T.untyped)
  EXTENSIONS = ::T.let(nil, ::T.untyped)
  KEY_ALGORITHM = ::T.let(nil, ::T.untyped)
  HighSecurity = ::T.let(nil, ::T.untyped)
  KEY_CIPHER = ::T.let(nil, ::T.untyped)
  KEY_LENGTH = ::T.let(nil, ::T.untyped)
  LowSecurity = ::T.let(nil, ::T.untyped)
  MediumSecurity = ::T.let(nil, ::T.untyped)
  NoSecurity = ::T.let(nil, ::T.untyped)
  ONE_DAY = ::T.let(nil, ::T.untyped)
  ONE_YEAR = ::T.let(nil, ::T.untyped)
  Policies = ::T.let(nil, ::T.untyped)
  SigningPolicy = ::T.let(nil, ::T.untyped)
end

class Gem::Security::DIGEST_ALGORITHM
  def initialize(data=T.unsafe(nil)); end
  def self.digest(data); end
  def self.hexdigest(data); end
end

class Gem::Security::KEY_ALGORITHM
  def d(); end
  def dmp1(); end
  def dmq1(); end
  def e(); end
  def export(*_); end
  def self.generate(*_); end
  def initialize(*_); end
  def iqmp(); end
  def n(); end
  def p(); end
  def params(); end
  def private?(); end
  def private_decrypt(*_); end
  def private_encrypt(*_); end
  def public?(); end
  def public_decrypt(*_); end
  def public_encrypt(*_); end
  def public_key(); end
  def q(); end
  def set_crt_params(_, _1, _2); end
  def set_factors(_, _1); end
  def set_key(_, _1, _2); end
  def sign_pss(*_); end
  def to_der(); end
  def to_pem(*_); end
  def to_s(*_); end
  def to_text(); end
  def verify_pss(*_); end
  NO_PADDING = nil
  PKCS1_OAEP_PADDING = nil
  PKCS1_PADDING = nil
  SSLV23_PADDING = nil
end

module Gem::UserInteraction
end

module Gem::DefaultUserInteraction
end

module Gem::Text
end

class Gem::Security::Policy
  include ::Gem::UserInteraction
  include ::Gem::DefaultUserInteraction
  include ::Gem::Text
  def check_cert(signer, issuer, time); end
  def check_chain(chain, time); end
  def check_data(public_key, digest, signature, data); end
  def check_key(signer, key); end
  def check_root(chain, time); end
  def check_trust(chain, digester, trust_dir); end
  def initialize(name, policy=T.unsafe(nil), opt=T.unsafe(nil)); end
  def name(); end
  def only_signed(); end
  def only_signed=(only_signed); end
  def only_trusted(); end
  def only_trusted=(only_trusted); end
  def subject(certificate); end
  def verify(chain, key=T.unsafe(nil), digests=T.unsafe(nil), signatures=T.unsafe(nil), full_name=T.unsafe(nil)); end
  def verify_chain(); end
  def verify_chain=(verify_chain); end
  def verify_data(); end
  def verify_data=(verify_data); end
  def verify_root(); end
  def verify_root=(verify_root); end
  def verify_signatures(spec, digests, signatures); end
  def verify_signer(); end
  def verify_signer=(verify_signer); end
end

class Gem::Security::TrustDir
  def cert_path(certificate); end
  def dir(); end
  def each_certificate(); end
  def initialize(dir, permissions=T.unsafe(nil)); end
  def issuer_of(certificate); end
  def load_certificate(certificate_file); end
  def name_path(name); end
  def trust_cert(certificate); end
  def verify(); end
  DEFAULT_PERMISSIONS = nil
end

class Gem::Security::Exception
end

class Gem::Security::Signer
  def cert_chain(); end
  def cert_chain=(cert_chain); end
  def digest_algorithm(); end
  def digest_name(); end
  def extract_name(cert); end
  def initialize(key, cert_chain, passphrase=T.unsafe(nil)); end
  def key(); end
  def key=(key); end
  def load_cert_chain(); end
  def re_sign_key(); end
  def sign(data); end
end
