class <emptyTree><<C <root>>> < (::<todo sym>)
  class <emptyTree>::<C OpEq><<C <todo sym>>> < (::<todo sym>)
    def b<<C <todo sym>>>(&<blk>)
      <emptyTree>
    end

    def b=<<C <todo sym>>>(_, &<blk>)
      <emptyTree>
    end

    def y<<C <todo sym>>>(&<blk>)
      <emptyTree>
    end

    def z<<C <todo sym>>>(&<blk>)
      <emptyTree>
    end

    def example<<C <todo sym>>>(a, &<blk>)
      begin
        if a
          a = :a
        else
          a
        end
        begin
          b$2 = <self>
          b$3 = b$2.b()
          if b$3
            b$2.b=(:b)
          else
            b$3
          end
        end
        begin
          []$4 = a
          []$5 = <self>.y()
          []$6 = <self>.z()
          []$7 = []$4.[]([]$5, []$6)
          if []$7
            []$4.[]=([]$5, []$6, 1)
          else
            []$7
          end
        end
        if a
          a
        else
          a = :a
        end
        begin
          b$8 = <self>
          b$9 = b$8.b()
          if b$9
            b$9
          else
            b$8.b=(:b)
          end
        end
        begin
          []$10 = a
          []$11 = <self>.y()
          []$12 = <self>.z()
          []$13 = []$10.[]([]$11, []$12)
          if []$13
            []$13
          else
            []$10.[]=([]$11, []$12, 1)
          end
        end
      end
    end
  end
end
